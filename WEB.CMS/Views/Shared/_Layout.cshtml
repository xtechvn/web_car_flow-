<!DOCTYPE html>
<html lang="vi" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=yes">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-title" content="" />
    <meta name="description" content="">
    <meta name="keywords" content="">
    <title> @ViewData["Title"] </title>
    <link type="image/x-icon" href="~/images/graphics/logo.svg" rel="shortcut icon" />
    <link rel="stylesheet" href="~/css/theme.css">

    <!-- build:head -->
</head>

<body class="homepage">

    <section class="section-main clearfix">
        <!--await Component.InvokeAsync("Menu")-->
        <!--HEADER-->
        <header class="header">
            <div class="header__logo">
                <img src="/images/graphics/logo.svg" alt="Cargill">
            </div>
            <div class="header__right">
                <div class="header-actions">
                    <a href="" class="action-btn menu-btn">
                        <img src="/images/icons/menu.svg" alt="Menu">
                    </a>

                    <a href="" class="action-btn">
                        <img src="/images/icons/settings.svg" alt="Cài đặt">
                    </a>

                    <a href="" class="action-btn">
                        <img src="/images/icons/bell.svg" alt="Thông báo">
                        <span class="badge">00+</span>

                    </a>
                    <div class="user-box">
                        <img src="/images/icons/user.svg" alt="">
                        <span>Chào, BinhDT</span>
                    </div>
                </div>

            </div>
        </header>
        <!--END HEADER-->

        @RenderBody()


    </section>

    <div id="magnific-popup-small" class="white-popup mfp-hide">
        <div class="content_lightbox">
            <div class="head magnific-title"></div>
            <div class="form-default magnific-body"></div>
        </div>
        <button title="Close (Esc)" type="button" class="mfp-close">×</button>
    </div>


    <!--end popup-->
    <!--Jquery lib-->
    <script src="~/js/jquery-2.1.4.min.js"></script>
    <script src="~/lib/jquery.validate.js"></script>
    <script src="~/lib/jquery-ui-1.12.1/jquery-ui.min.js"></script>
    <script src="~/js/jquery.magnific-popup.min.js"></script>
    <script src="~/js/simple-scrollbar.min.js"></script>
    <script src="~/lib/cms-common.js"></script>
    <script src="~/js/common.js"></script>
    <script>
        $(function () {
            $('.table-wrapper').each(function () {
                SimpleScrollbar.initEl(this);
            });
        });

        // js dropdown
        $(function () {
            const container = $('<div id="dropdown-container"></div>').appendTo('body');
            let $menu = null;
            let $currentBtn = null;

            $(document).on('click', '.status-dropdown .dropdown-toggle', function (e) {
                e.stopPropagation();
                const $btn = $(this);
                const optsData = $btn.data('options'); // mảng [{text, class}]
                const options = Array.isArray(optsData) ? optsData : JSON.parse(optsData);
                const currentText = $.trim($btn.text());

                // Đóng menu cũ (nếu có)
                if ($menu) {
                    $menu.remove();
                    $menu = null;
                }

                $currentBtn = $btn;

                // Tạo menu + danh sách li
                $menu = $('<div class="dropdown-menu"><ul></ul></div>');
                const $ul = $menu.find('ul');

                options.forEach(opt => {
                    $('<li>')
                        .text(opt.text)
                        .addClass(opt.class) // class riêng cho mỗi option
                        .toggleClass('active', opt.text === currentText)
                        .appendTo($ul);
                });

                const $actions = $('<div class="actions"></div>');
                $('<button class="cancel">Bỏ qua</button>').appendTo($actions);
                $('<button class="confirm">Xác nhận</button>').appendTo($actions);
                $menu.append($actions);
                container.append($menu);

                // Tính toán vị trí
                const btnOffset = $btn.offset();
                const btnHeight = $btn.outerHeight();
                const menuHeight = $menu.outerHeight();
                const winHeight = $(window).height();
                let top = btnOffset.top + btnHeight;
                let dropUp = false;

                if (top + menuHeight > winHeight) {
                    top = btnOffset.top - menuHeight;
                    dropUp = true;
                    $menu.addClass('drop-up');
                } else {
                    $menu.removeClass('drop-up');
                }

                $menu.css({
                    left: btnOffset.left,
                    top: top,
                    display: 'block'
                });
            });

            // Click chọn item
            $(document).on('click', '#dropdown-container .dropdown-menu li', function (e) {
                e.stopPropagation();
                $('#dropdown-container .dropdown-menu li').removeClass('active');
                $(this).addClass('active');
            });

            // Bỏ qua
            $(document).on('click', '#dropdown-container .actions .cancel', function (e) {
                e.stopPropagation();
                closeMenu();
            });

            // ✅ Xác nhận – đổi text + class cho button
            $(document).on('click', '#dropdown-container .actions .confirm', function (e) {
                e.stopPropagation();
                if ($menu && $currentBtn) {
                    const $active = $menu.find('li.active');
                    if ($active.length) {
                        const text = $active.text();
                        const cls = $active.attr('class').split(/\s+/)
                            .filter(c => c !== 'active')[0] || '';

                        $currentBtn
                            .text(text)
                            .removeClass(function (_, old) {
                                return (old.match(/(^|\s)status-\S+/g) || []).join(' ');
                            }) // xoá các class status- cũ
                            .addClass(cls); // gắn class mới (status-arrived, status-blank…)
                    }
                }
                closeMenu();
            });

            // Đóng menu khi click ra ngoài
            $(document).on('click', function () {
                closeMenu();
            });

            function closeMenu() {
                if ($menu) {
                    $menu.remove();
                    $menu = null;
                    $currentBtn = null;
                }
            }
        });

    </script>

    <div class="clearfix"></div>

    <script>
        $('.open-popup-link').magnificPopup({
            type: 'inline',
            midClick: true, // Allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source in href.
            mainClass: 'mfp-with-zoom',
            fixedContentPos: false,
            fixedBgPos: true,
            overflowY: 'auto',
            closeBtnInside: true,
            preloader: false,
            removalDelay: 300,
        });
    </script>

    <!-- build:script -->
    @RenderSection("Scripts", required: false)
</body>
</html>